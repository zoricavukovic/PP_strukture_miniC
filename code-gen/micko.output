Grammar

    0 $accept: program $end

    1 program: struct_list global_struct_list function_list

    2 struct_list: %empty
    3            | struct_list struct_id _LBRACKET attribute_list _RBRACKET _SEMICOLON

    4 struct_id: _STRUCT _ID

    5 attribute_list: %empty
    6               | attribute_list struct_attribute

    7 struct_attribute: _TYPE _ID _SEMICOLON

    8 global_struct_list: %empty
    9                   | global_struct global_struct_list

   10 global_struct: _STRUCT _ID _ID _SEMICOLON
   11              | _STRUCT _ID _ID _ASSIGN _LBRACKET _RBRACKET _SEMICOLON

   12 function_list: function
   13              | function_list function

   14 $@1: %empty

   15 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body

   16 parameter: %empty
   17          | _TYPE _ID

   18 $@2: %empty

   19 body: _LBRACKET variable_list $@2 statement_list _RBRACKET

   20 variable_list: %empty
   21              | variable_list variable

   22 variable: _TYPE _ID _SEMICOLON

   23 statement_list: %empty
   24               | statement_list statement

   25 statement: compound_statement
   26          | assignment_statement
   27          | if_statement
   28          | return_statement

   29 compound_statement: _LBRACKET statement_list _RBRACKET

   30 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON
   31                     | new_ID _ASSIGN num_exp _SEMICOLON

   32 num_exp: exp
   33        | num_exp _AROP exp

   34 exp: literal
   35    | _ID
   36    | function_call
   37    | _LPAREN num_exp _RPAREN
   38    | new_ID

   39 new_ID: _ID _POINT _ID

   40 literal: _INT_NUMBER
   41        | _UINT_NUMBER

   42 $@3: %empty

   43 function_call: _ID $@3 _LPAREN argument _RPAREN

   44 argument: %empty
   45         | num_exp

   46 if_statement: if_part
   47             | if_part _ELSE statement

   48 @4: %empty

   49 $@5: %empty

   50 if_part: _IF _LPAREN @4 rel_exp $@5 _RPAREN statement

   51 rel_exp: num_exp _RELOP num_exp

   52 return_statement: _RETURN num_exp _SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    _TYPE <i> (258) 7 15 17 22
    _IF (259) 50
    _ELSE (260) 47
    _RETURN (261) 52
    _POINT (262) 39
    _ID <s> (263) 4 7 10 11 15 17 22 30 35 39 43
    _INT_NUMBER <s> (264) 40
    _UINT_NUMBER <s> (265) 41
    _LPAREN (266) 15 37 43 50
    _RPAREN (267) 15 37 43 50
    _LBRACKET (268) 3 11 19 29
    _RBRACKET (269) 3 11 19 29
    _ASSIGN (270) 11 30 31
    _SEMICOLON (271) 3 7 10 11 22 30 31 52
    _STRUCT (272) 4 10 11
    _AROP <i> (273) 33
    _RELOP <i> (274) 51
    ONLY_IF (275)


Nonterminals, with rules where they appear

    $accept (21)
        on left: 0
    program (22)
        on left: 1
        on right: 0
    struct_list (23)
        on left: 2 3
        on right: 1 3
    struct_id (24)
        on left: 4
        on right: 3
    attribute_list (25)
        on left: 5 6
        on right: 3 6
    struct_attribute (26)
        on left: 7
        on right: 6
    global_struct_list (27)
        on left: 8 9
        on right: 1 9
    global_struct (28)
        on left: 10 11
        on right: 9
    function_list (29)
        on left: 12 13
        on right: 1 13
    function (30)
        on left: 15
        on right: 12 13
    $@1 (31)
        on left: 14
        on right: 15
    parameter (32)
        on left: 16 17
        on right: 15
    body (33)
        on left: 19
        on right: 15
    $@2 (34)
        on left: 18
        on right: 19
    variable_list (35)
        on left: 20 21
        on right: 19 21
    variable (36)
        on left: 22
        on right: 21
    statement_list (37)
        on left: 23 24
        on right: 19 24 29
    statement (38)
        on left: 25 26 27 28
        on right: 24 47 50
    compound_statement (39)
        on left: 29
        on right: 25
    assignment_statement (40)
        on left: 30 31
        on right: 26
    num_exp <i> (41)
        on left: 32 33
        on right: 30 31 33 37 45 51 52
    exp <i> (42)
        on left: 34 35 36 37 38
        on right: 32 33
    new_ID <i> (43)
        on left: 39
        on right: 31 38
    literal <i> (44)
        on left: 40 41
        on right: 34
    function_call <i> (45)
        on left: 43
        on right: 36
    $@3 (46)
        on left: 42
        on right: 43
    argument <i> (47)
        on left: 44 45
        on right: 43
    if_statement (48)
        on left: 46 47
        on right: 27
    if_part <i> (49)
        on left: 50
        on right: 46 47
    @4 (50)
        on left: 48
        on right: 50
    $@5 (51)
        on left: 49
        on right: 50
    rel_exp <i> (52)
        on left: 51
        on right: 50
    return_statement (53)
        on left: 52
        on right: 28


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (struct_list)

    program      go to state 1
    struct_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: struct_list . global_struct_list function_list
    3 struct_list: struct_list . struct_id _LBRACKET attribute_list _RBRACKET _SEMICOLON

    _STRUCT  shift, and go to state 4

    $default  reduce using rule 8 (global_struct_list)

    struct_id           go to state 5
    global_struct_list  go to state 6
    global_struct       go to state 7


State 3

    0 $accept: program $end .

    $default  accept


State 4

    4 struct_id: _STRUCT . _ID
   10 global_struct: _STRUCT . _ID _ID _SEMICOLON
   11              | _STRUCT . _ID _ID _ASSIGN _LBRACKET _RBRACKET _SEMICOLON

    _ID  shift, and go to state 8


State 5

    3 struct_list: struct_list struct_id . _LBRACKET attribute_list _RBRACKET _SEMICOLON

    _LBRACKET  shift, and go to state 9


State 6

    1 program: struct_list global_struct_list . function_list

    _TYPE  shift, and go to state 10

    function_list  go to state 11
    function       go to state 12


State 7

    9 global_struct_list: global_struct . global_struct_list

    _STRUCT  shift, and go to state 13

    $default  reduce using rule 8 (global_struct_list)

    global_struct_list  go to state 14
    global_struct       go to state 7


State 8

    4 struct_id: _STRUCT _ID .
   10 global_struct: _STRUCT _ID . _ID _SEMICOLON
   11              | _STRUCT _ID . _ID _ASSIGN _LBRACKET _RBRACKET _SEMICOLON

    _ID  shift, and go to state 15

    $default  reduce using rule 4 (struct_id)


State 9

    3 struct_list: struct_list struct_id _LBRACKET . attribute_list _RBRACKET _SEMICOLON

    $default  reduce using rule 5 (attribute_list)

    attribute_list  go to state 16


State 10

   15 function: _TYPE . _ID $@1 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 17


State 11

    1 program: struct_list global_struct_list function_list .
   13 function_list: function_list . function

    _TYPE  shift, and go to state 10

    $default  reduce using rule 1 (program)

    function  go to state 18


State 12

   12 function_list: function .

    $default  reduce using rule 12 (function_list)


State 13

   10 global_struct: _STRUCT . _ID _ID _SEMICOLON
   11              | _STRUCT . _ID _ID _ASSIGN _LBRACKET _RBRACKET _SEMICOLON

    _ID  shift, and go to state 19


State 14

    9 global_struct_list: global_struct global_struct_list .

    $default  reduce using rule 9 (global_struct_list)


State 15

   10 global_struct: _STRUCT _ID _ID . _SEMICOLON
   11              | _STRUCT _ID _ID . _ASSIGN _LBRACKET _RBRACKET _SEMICOLON

    _ASSIGN     shift, and go to state 20
    _SEMICOLON  shift, and go to state 21


State 16

    3 struct_list: struct_list struct_id _LBRACKET attribute_list . _RBRACKET _SEMICOLON
    6 attribute_list: attribute_list . struct_attribute

    _TYPE      shift, and go to state 22
    _RBRACKET  shift, and go to state 23

    struct_attribute  go to state 24


State 17

   15 function: _TYPE _ID . $@1 _LPAREN parameter _RPAREN body

    $default  reduce using rule 14 ($@1)

    $@1  go to state 25


State 18

   13 function_list: function_list function .

    $default  reduce using rule 13 (function_list)


State 19

   10 global_struct: _STRUCT _ID . _ID _SEMICOLON
   11              | _STRUCT _ID . _ID _ASSIGN _LBRACKET _RBRACKET _SEMICOLON

    _ID  shift, and go to state 15


State 20

   11 global_struct: _STRUCT _ID _ID _ASSIGN . _LBRACKET _RBRACKET _SEMICOLON

    _LBRACKET  shift, and go to state 26


State 21

   10 global_struct: _STRUCT _ID _ID _SEMICOLON .

    $default  reduce using rule 10 (global_struct)


State 22

    7 struct_attribute: _TYPE . _ID _SEMICOLON

    _ID  shift, and go to state 27


State 23

    3 struct_list: struct_list struct_id _LBRACKET attribute_list _RBRACKET . _SEMICOLON

    _SEMICOLON  shift, and go to state 28


State 24

    6 attribute_list: attribute_list struct_attribute .

    $default  reduce using rule 6 (attribute_list)


State 25

   15 function: _TYPE _ID $@1 . _LPAREN parameter _RPAREN body

    _LPAREN  shift, and go to state 29


State 26

   11 global_struct: _STRUCT _ID _ID _ASSIGN _LBRACKET . _RBRACKET _SEMICOLON

    _RBRACKET  shift, and go to state 30


State 27

    7 struct_attribute: _TYPE _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 31


State 28

    3 struct_list: struct_list struct_id _LBRACKET attribute_list _RBRACKET _SEMICOLON .

    $default  reduce using rule 3 (struct_list)


State 29

   15 function: _TYPE _ID $@1 _LPAREN . parameter _RPAREN body

    _TYPE  shift, and go to state 32

    $default  reduce using rule 16 (parameter)

    parameter  go to state 33


State 30

   11 global_struct: _STRUCT _ID _ID _ASSIGN _LBRACKET _RBRACKET . _SEMICOLON

    _SEMICOLON  shift, and go to state 34


State 31

    7 struct_attribute: _TYPE _ID _SEMICOLON .

    $default  reduce using rule 7 (struct_attribute)


State 32

   17 parameter: _TYPE . _ID

    _ID  shift, and go to state 35


State 33

   15 function: _TYPE _ID $@1 _LPAREN parameter . _RPAREN body

    _RPAREN  shift, and go to state 36


State 34

   11 global_struct: _STRUCT _ID _ID _ASSIGN _LBRACKET _RBRACKET _SEMICOLON .

    $default  reduce using rule 11 (global_struct)


State 35

   17 parameter: _TYPE _ID .

    $default  reduce using rule 17 (parameter)


State 36

   15 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN . body

    _LBRACKET  shift, and go to state 37

    body  go to state 38


State 37

   19 body: _LBRACKET . variable_list $@2 statement_list _RBRACKET

    $default  reduce using rule 20 (variable_list)

    variable_list  go to state 39


State 38

   15 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body .

    $default  reduce using rule 15 (function)


State 39

   19 body: _LBRACKET variable_list . $@2 statement_list _RBRACKET
   21 variable_list: variable_list . variable

    _TYPE  shift, and go to state 40

    $default  reduce using rule 18 ($@2)

    $@2       go to state 41
    variable  go to state 42


State 40

   22 variable: _TYPE . _ID _SEMICOLON

    _ID  shift, and go to state 43


State 41

   19 body: _LBRACKET variable_list $@2 . statement_list _RBRACKET

    $default  reduce using rule 23 (statement_list)

    statement_list  go to state 44


State 42

   21 variable_list: variable_list variable .

    $default  reduce using rule 21 (variable_list)


State 43

   22 variable: _TYPE _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 45


State 44

   19 body: _LBRACKET variable_list $@2 statement_list . _RBRACKET
   24 statement_list: statement_list . statement

    _IF        shift, and go to state 46
    _RETURN    shift, and go to state 47
    _ID        shift, and go to state 48
    _LBRACKET  shift, and go to state 49
    _RBRACKET  shift, and go to state 50

    statement             go to state 51
    compound_statement    go to state 52
    assignment_statement  go to state 53
    new_ID                go to state 54
    if_statement          go to state 55
    if_part               go to state 56
    return_statement      go to state 57


State 45

   22 variable: _TYPE _ID _SEMICOLON .

    $default  reduce using rule 22 (variable)


State 46

   50 if_part: _IF . _LPAREN @4 rel_exp $@5 _RPAREN statement

    _LPAREN  shift, and go to state 58


State 47

   52 return_statement: _RETURN . num_exp _SEMICOLON

    _ID           shift, and go to state 59
    _INT_NUMBER   shift, and go to state 60
    _UINT_NUMBER  shift, and go to state 61
    _LPAREN       shift, and go to state 62

    num_exp        go to state 63
    exp            go to state 64
    new_ID         go to state 65
    literal        go to state 66
    function_call  go to state 67


State 48

   30 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON
   39 new_ID: _ID . _POINT _ID

    _POINT   shift, and go to state 68
    _ASSIGN  shift, and go to state 69


State 49

   29 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 23 (statement_list)

    statement_list  go to state 70


State 50

   19 body: _LBRACKET variable_list $@2 statement_list _RBRACKET .

    $default  reduce using rule 19 (body)


State 51

   24 statement_list: statement_list statement .

    $default  reduce using rule 24 (statement_list)


State 52

   25 statement: compound_statement .

    $default  reduce using rule 25 (statement)


State 53

   26 statement: assignment_statement .

    $default  reduce using rule 26 (statement)


State 54

   31 assignment_statement: new_ID . _ASSIGN num_exp _SEMICOLON

    _ASSIGN  shift, and go to state 71


State 55

   27 statement: if_statement .

    $default  reduce using rule 27 (statement)


State 56

   46 if_statement: if_part .
   47             | if_part . _ELSE statement

    _ELSE  shift, and go to state 72

    $default  reduce using rule 46 (if_statement)


State 57

   28 statement: return_statement .

    $default  reduce using rule 28 (statement)


State 58

   50 if_part: _IF _LPAREN . @4 rel_exp $@5 _RPAREN statement

    $default  reduce using rule 48 (@4)

    @4  go to state 73


State 59

   35 exp: _ID .
   39 new_ID: _ID . _POINT _ID
   43 function_call: _ID . $@3 _LPAREN argument _RPAREN

    _POINT  shift, and go to state 68

    _LPAREN   reduce using rule 42 ($@3)
    $default  reduce using rule 35 (exp)

    $@3  go to state 74


State 60

   40 literal: _INT_NUMBER .

    $default  reduce using rule 40 (literal)


State 61

   41 literal: _UINT_NUMBER .

    $default  reduce using rule 41 (literal)


State 62

   37 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 59
    _INT_NUMBER   shift, and go to state 60
    _UINT_NUMBER  shift, and go to state 61
    _LPAREN       shift, and go to state 62

    num_exp        go to state 75
    exp            go to state 64
    new_ID         go to state 65
    literal        go to state 66
    function_call  go to state 67


State 63

   33 num_exp: num_exp . _AROP exp
   52 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 76
    _AROP       shift, and go to state 77


State 64

   32 num_exp: exp .

    $default  reduce using rule 32 (num_exp)


State 65

   38 exp: new_ID .

    $default  reduce using rule 38 (exp)


State 66

   34 exp: literal .

    $default  reduce using rule 34 (exp)


State 67

   36 exp: function_call .

    $default  reduce using rule 36 (exp)


State 68

   39 new_ID: _ID _POINT . _ID

    _ID  shift, and go to state 78


State 69

   30 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 59
    _INT_NUMBER   shift, and go to state 60
    _UINT_NUMBER  shift, and go to state 61
    _LPAREN       shift, and go to state 62

    num_exp        go to state 79
    exp            go to state 64
    new_ID         go to state 65
    literal        go to state 66
    function_call  go to state 67


State 70

   24 statement_list: statement_list . statement
   29 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 46
    _RETURN    shift, and go to state 47
    _ID        shift, and go to state 48
    _LBRACKET  shift, and go to state 49
    _RBRACKET  shift, and go to state 80

    statement             go to state 51
    compound_statement    go to state 52
    assignment_statement  go to state 53
    new_ID                go to state 54
    if_statement          go to state 55
    if_part               go to state 56
    return_statement      go to state 57


State 71

   31 assignment_statement: new_ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 59
    _INT_NUMBER   shift, and go to state 60
    _UINT_NUMBER  shift, and go to state 61
    _LPAREN       shift, and go to state 62

    num_exp        go to state 81
    exp            go to state 64
    new_ID         go to state 65
    literal        go to state 66
    function_call  go to state 67


State 72

   47 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 46
    _RETURN    shift, and go to state 47
    _ID        shift, and go to state 48
    _LBRACKET  shift, and go to state 49

    statement             go to state 82
    compound_statement    go to state 52
    assignment_statement  go to state 53
    new_ID                go to state 54
    if_statement          go to state 55
    if_part               go to state 56
    return_statement      go to state 57


State 73

   50 if_part: _IF _LPAREN @4 . rel_exp $@5 _RPAREN statement

    _ID           shift, and go to state 59
    _INT_NUMBER   shift, and go to state 60
    _UINT_NUMBER  shift, and go to state 61
    _LPAREN       shift, and go to state 62

    num_exp        go to state 83
    exp            go to state 64
    new_ID         go to state 65
    literal        go to state 66
    function_call  go to state 67
    rel_exp        go to state 84


State 74

   43 function_call: _ID $@3 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 85


State 75

   33 num_exp: num_exp . _AROP exp
   37 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 86
    _AROP    shift, and go to state 77


State 76

   52 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 52 (return_statement)


State 77

   33 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 59
    _INT_NUMBER   shift, and go to state 60
    _UINT_NUMBER  shift, and go to state 61
    _LPAREN       shift, and go to state 62

    exp            go to state 87
    new_ID         go to state 65
    literal        go to state 66
    function_call  go to state 67


State 78

   39 new_ID: _ID _POINT _ID .

    $default  reduce using rule 39 (new_ID)


State 79

   30 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   33 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 88
    _AROP       shift, and go to state 77


State 80

   29 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 29 (compound_statement)


State 81

   31 assignment_statement: new_ID _ASSIGN num_exp . _SEMICOLON
   33 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 89
    _AROP       shift, and go to state 77


State 82

   47 if_statement: if_part _ELSE statement .

    $default  reduce using rule 47 (if_statement)


State 83

   33 num_exp: num_exp . _AROP exp
   51 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 77
    _RELOP  shift, and go to state 90


State 84

   50 if_part: _IF _LPAREN @4 rel_exp . $@5 _RPAREN statement

    $default  reduce using rule 49 ($@5)

    $@5  go to state 91


State 85

   43 function_call: _ID $@3 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 59
    _INT_NUMBER   shift, and go to state 60
    _UINT_NUMBER  shift, and go to state 61
    _LPAREN       shift, and go to state 62

    $default  reduce using rule 44 (argument)

    num_exp        go to state 92
    exp            go to state 64
    new_ID         go to state 65
    literal        go to state 66
    function_call  go to state 67
    argument       go to state 93


State 86

   37 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 37 (exp)


State 87

   33 num_exp: num_exp _AROP exp .

    $default  reduce using rule 33 (num_exp)


State 88

   30 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 30 (assignment_statement)


State 89

   31 assignment_statement: new_ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 31 (assignment_statement)


State 90

   51 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 59
    _INT_NUMBER   shift, and go to state 60
    _UINT_NUMBER  shift, and go to state 61
    _LPAREN       shift, and go to state 62

    num_exp        go to state 94
    exp            go to state 64
    new_ID         go to state 65
    literal        go to state 66
    function_call  go to state 67


State 91

   50 if_part: _IF _LPAREN @4 rel_exp $@5 . _RPAREN statement

    _RPAREN  shift, and go to state 95


State 92

   33 num_exp: num_exp . _AROP exp
   45 argument: num_exp .

    _AROP  shift, and go to state 77

    $default  reduce using rule 45 (argument)


State 93

   43 function_call: _ID $@3 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 96


State 94

   33 num_exp: num_exp . _AROP exp
   51 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 77

    $default  reduce using rule 51 (rel_exp)


State 95

   50 if_part: _IF _LPAREN @4 rel_exp $@5 _RPAREN . statement

    _IF        shift, and go to state 46
    _RETURN    shift, and go to state 47
    _ID        shift, and go to state 48
    _LBRACKET  shift, and go to state 49

    statement             go to state 97
    compound_statement    go to state 52
    assignment_statement  go to state 53
    new_ID                go to state 54
    if_statement          go to state 55
    if_part               go to state 56
    return_statement      go to state 57


State 96

   43 function_call: _ID $@3 _LPAREN argument _RPAREN .

    $default  reduce using rule 43 (function_call)


State 97

   50 if_part: _IF _LPAREN @4 rel_exp $@5 _RPAREN statement .

    $default  reduce using rule 50 (if_part)
